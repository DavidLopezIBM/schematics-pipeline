apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-workspace-task
spec:
  params:
    - name: API_KEY
      description: the ibmcloud api key
    - name: workspace-id
      description: the workspace id
  workspaces:
    - name: artifacts
      mountPath: /artifacts
  steps:
    - name: update-workspace
      image: ibmcom/pipeline-base-image:2.6
      env:
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: $(params.ibmcloud-apikey-secret-key)
              optional: true
        - name: workspace-id
          value: $(params.workspace-id)
      command: ["/bin/bash", "-c"]
      args:
        - |
          #!/bin/bash
          echo "Workspace $workspace-id"
          # force login (required by schematics cli)
          ibmcloud login --apikey $API_KEY -a "https://cloud.ibm.com" --no-region
          # get schematics workspace as json
          WORKSPACE=$(ibmcloud terraform workspace get -i $workspace-id --json)
          echo "Updating Schematics workspace from environment variables..."
          # iterate over ALL schematics worskpace variables to see if there is a matching env var
          for KEY in $(echo $WORKSPACE | jq ".template_data[0].values_metadata[].name" -r); do
              
              # if the value exists as an env var, update the workspace
              if [ -n "${!KEY}" ]; then
                  echo "$KEY found with value '${!KEY}'"; 
                  SEARCH=$(echo $WORKSPACE | jq ".template_data[0].variablestore[].name")
                  
                  if [[ "$SEARCH" =~ .*"$KEY".* ]]; then
                      #echo "It's there, update it."
                      WORKSPACE=$(echo $WORKSPACE | jq -r \
                          --arg updateKey "$KEY" \
                          --arg updateVal "${!KEY}" \
                          '.template_data[0].variablestore = [.template_data[0].variablestore[] | if (.name == $updateKey) then (.value = $updateVal) else . end]' )
                  else 
                      #echo "It's NOT there, add it."
                      WORKSPACE=$(echo $WORKSPACE | jq -r ".template_data[0].variablestore[.template_data[0].variablestore| length] |= . + { \"name\": \"$KEY\", \"value\": \"${!KEY}\", \"type\": \"string\" }")
                      
                  fi
              fi
          done
          echo $WORKSPACE > workspace.json
          ibmcloud terraform workspace update --id $workspace-id --file workspace.json
          # cleanup
          rm -f workspace.json
          sleep 10
          unset WORKSPACE
